name: Test CI

on:
    push:
        branches: [ "main" ]
    pull_request:
        branches: [ "main" ]

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v2
            - name: Install dependencies
              run: npm ci
            - name: Run tests and generate report
              run: |
                npm test --reporter mochawesome
                mv ./mochawesome-report/mochawesome*.json ./test-report.json
              continue-on-error: true
            - name: Upload test report
              uses: actions/upload-artifact@v2
              with:
                name: test-report
                path: test-report.json
            - name: Create test result check
              id: test-result
              uses: actions/github-script@v7
              with:
                script: |
                  const fs = require('fs');
                  const testReport = fs.readFileSync('test-report.json', 'utf8');
                  const testSummary = JSON.parse(testReport);
      
                  const annotations = testSummary.results.map(result => ({
                    path: result.file,
                    start_line: result.start,
                    end_line: result.end,
                    annotation_level: 'failure',
                    title: result.fullTitle,
                    message: `Test ${result.state}: ${result.title}`,
                  }));
      
                  const checkConclusion = testSummary.stats.failures > 0 ? 'failure' : 'success';
      
                  github.checks.create({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    name: 'Test Results',
                    head_sha: context.sha,
                    status: 'completed',
                    conclusion: checkConclusion,
                    output: {
                      title: 'Test Results',
                      summary: `Total tests: ${testSummary.stats.tests}, Failures: ${testSummary.stats.failures}`,
                      annotations: annotations,
                    },
                  });
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}